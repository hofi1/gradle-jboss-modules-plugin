package com.github.zhurlik.task

import com.github.zhurlik.extension.JBossModule
import groovy.util.logging.Slf4j
import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction

import static java.io.File.separator

/**
 * A task to check if a xml descriptor is valid.
 *
 * @author zhurlik@gmail.com
 */
@Slf4j('logger')
class CheckModulesTask extends DefaultTask {
    static final String NAME = 'checkModules'
    @TaskAction
    def checkModules() {
        logger.info ">> Validation process for JBoss Modules"

        // generated by makeModules task
        project.jbossrepos.each {
            new File([project.buildDir.path, 'install', it.name, 'modules'].join(separator)).eachDirRecurse() {
                it.eachFileMatch(~/module.xml/) { file ->
                    def m = new XmlSlurper().parse(file)
                    //availableModules.put(m.@name, file)
                }
            }
        }

        project.modules.each() { JBossModule m ->
            def boolean valid = m.isValid()
            logger.debug '>> Module: ' + m.moduleName
            logger.debug String.format('\tDescriptor:"%s", valid=%s', m.moduleName, valid)
            if (valid) {
                def desc = new XmlSlurper().parseText(m.moduleDescriptor)
                desc.dependencies.module.each() {
//                    if (!availableModules.containsKey(it.@name)) {
//                        println '\tWARNING: Dependency:' + it.@name + ' is missing'
//                    }
                }
            }
        }
    }
}
